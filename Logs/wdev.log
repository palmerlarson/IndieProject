[DEBUG] 2022-05-10 12:52:58.315 [http-nio-8080-exec-4] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-05-10 12:52:58.317 [http-nio-8080-exec-4] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-05-10 12:52:58.321 [http-nio-8080-exec-4] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-05-10 12:52:58.391 [http-nio-8080-exec-4] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2022-05-10 12:52:58.395 [http-nio-8080-exec-4] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2022-05-10 12:52:58.548 [http-nio-8080-exec-4] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2022-05-10 12:52:58.550 [http-nio-8080-exec-4] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2022-05-10 12:52:58.556 [http-nio-8080-exec-4] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2022-05-10 12:52:58.897 [http-nio-8080-exec-4] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-05-10 12:52:58.915 [http-nio-8080-exec-4] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-05-10 12:52:58.918 [http-nio-8080-exec-4] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-05-10 12:52:58.937 [http-nio-8080-exec-4] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2022-05-10 12:52:58.979 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@40565311
[DEBUG] 2022-05-10 12:52:58.979 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@40565311
[DEBUG] 2022-05-10 12:52:58.979 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@40565311
[DEBUG] 2022-05-10 12:52:58.980 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3095d4de
[DEBUG] 2022-05-10 12:52:58.980 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6c44fee
[DEBUG] 2022-05-10 12:52:58.981 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3ebcbbbb
[DEBUG] 2022-05-10 12:52:58.981 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@651b8442
[DEBUG] 2022-05-10 12:52:58.982 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@651b8442
[DEBUG] 2022-05-10 12:52:58.982 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@651b8442
[DEBUG] 2022-05-10 12:52:58.982 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@56678bde
[DEBUG] 2022-05-10 12:52:58.983 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@56678bde
[DEBUG] 2022-05-10 12:52:58.983 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@56678bde
[DEBUG] 2022-05-10 12:52:58.984 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1da3fcbd
[DEBUG] 2022-05-10 12:52:58.984 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1da3fcbd
[DEBUG] 2022-05-10 12:52:58.984 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1da3fcbd
[DEBUG] 2022-05-10 12:52:58.985 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@f129daf
[DEBUG] 2022-05-10 12:52:58.985 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@f129daf
[DEBUG] 2022-05-10 12:52:58.985 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f129daf
[DEBUG] 2022-05-10 12:52:58.986 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1928433
[DEBUG] 2022-05-10 12:52:58.986 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1928433
[DEBUG] 2022-05-10 12:52:58.986 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1928433
[DEBUG] 2022-05-10 12:52:58.986 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@52507238
[DEBUG] 2022-05-10 12:52:58.987 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@52507238
[DEBUG] 2022-05-10 12:52:58.987 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@52507238
[DEBUG] 2022-05-10 12:52:58.987 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3fe8f2e3
[DEBUG] 2022-05-10 12:52:58.987 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3fe8f2e3
[DEBUG] 2022-05-10 12:52:58.987 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3fe8f2e3
[DEBUG] 2022-05-10 12:52:58.988 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4dcf2d3a
[DEBUG] 2022-05-10 12:52:58.988 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4dcf2d3a
[DEBUG] 2022-05-10 12:52:58.989 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@218b5c30
[DEBUG] 2022-05-10 12:52:58.989 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@218b5c30
[DEBUG] 2022-05-10 12:52:58.990 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@26397f05
[DEBUG] 2022-05-10 12:52:58.990 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@26397f05
[DEBUG] 2022-05-10 12:52:58.990 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@350cf8f2
[DEBUG] 2022-05-10 12:52:58.990 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@316a45d4
[DEBUG] 2022-05-10 12:52:58.991 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@693f6046
[DEBUG] 2022-05-10 12:52:58.991 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@693f6046
[DEBUG] 2022-05-10 12:52:58.992 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1e514810
[DEBUG] 2022-05-10 12:52:58.992 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1e514810
[DEBUG] 2022-05-10 12:52:59.001 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5212a3e5
[DEBUG] 2022-05-10 12:52:59.001 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5212a3e5
[DEBUG] 2022-05-10 12:52:59.002 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@78deb15e
[DEBUG] 2022-05-10 12:52:59.002 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@78deb15e
[DEBUG] 2022-05-10 12:52:59.003 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@393e9104
[DEBUG] 2022-05-10 12:52:59.003 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@393e9104
[DEBUG] 2022-05-10 12:52:59.004 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@171ec337
[DEBUG] 2022-05-10 12:52:59.004 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@171ec337
[DEBUG] 2022-05-10 12:52:59.006 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@404d9dd6
[DEBUG] 2022-05-10 12:52:59.006 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@404d9dd6
[DEBUG] 2022-05-10 12:52:59.006 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2d9bafeb
[DEBUG] 2022-05-10 12:52:59.007 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2d9bafeb
[DEBUG] 2022-05-10 12:52:59.009 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@697222
[DEBUG] 2022-05-10 12:52:59.010 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@697222
[DEBUG] 2022-05-10 12:52:59.011 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7c40379a
[DEBUG] 2022-05-10 12:52:59.011 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c40379a
[DEBUG] 2022-05-10 12:52:59.012 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@577337ad
[DEBUG] 2022-05-10 12:52:59.012 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@577337ad
[DEBUG] 2022-05-10 12:52:59.013 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@583178f2
[DEBUG] 2022-05-10 12:52:59.013 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@583178f2
[DEBUG] 2022-05-10 12:52:59.013 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@583178f2
[DEBUG] 2022-05-10 12:52:59.015 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@374feff4
[DEBUG] 2022-05-10 12:52:59.016 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@13e385c3
[DEBUG] 2022-05-10 12:52:59.016 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@13e385c3
[DEBUG] 2022-05-10 12:52:59.016 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@13e385c3
[DEBUG] 2022-05-10 12:52:59.017 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@a662549
[DEBUG] 2022-05-10 12:52:59.018 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@46535d3f
[DEBUG] 2022-05-10 12:52:59.019 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@46535d3f
[DEBUG] 2022-05-10 12:52:59.020 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7bc248f8
[DEBUG] 2022-05-10 12:52:59.021 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7bc248f8
[DEBUG] 2022-05-10 12:52:59.022 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5c04011b
[DEBUG] 2022-05-10 12:52:59.022 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5c04011b
[DEBUG] 2022-05-10 12:52:59.022 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7878000b
[DEBUG] 2022-05-10 12:52:59.022 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7878000b
[DEBUG] 2022-05-10 12:52:59.023 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@489d7ee5
[DEBUG] 2022-05-10 12:52:59.023 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@489d7ee5
[DEBUG] 2022-05-10 12:52:59.023 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@8233753
[DEBUG] 2022-05-10 12:52:59.024 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@40404280
[DEBUG] 2022-05-10 12:52:59.024 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@40404280
[DEBUG] 2022-05-10 12:52:59.024 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@40404280
[DEBUG] 2022-05-10 12:52:59.025 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5e8b29c6
[DEBUG] 2022-05-10 12:52:59.026 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5e8b29c6
[DEBUG] 2022-05-10 12:52:59.026 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5e8b29c6
[DEBUG] 2022-05-10 12:52:59.026 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@69bcd5fe
[DEBUG] 2022-05-10 12:52:59.027 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6a221723
[DEBUG] 2022-05-10 12:52:59.027 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1201efa7
[DEBUG] 2022-05-10 12:52:59.028 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1201efa7
[DEBUG] 2022-05-10 12:52:59.028 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1201efa7
[DEBUG] 2022-05-10 12:52:59.028 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4591d7e3
[DEBUG] 2022-05-10 12:52:59.029 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4591d7e3
[DEBUG] 2022-05-10 12:52:59.029 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4591d7e3
[DEBUG] 2022-05-10 12:52:59.029 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2a61511b
[DEBUG] 2022-05-10 12:52:59.030 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4927902d
[DEBUG] 2022-05-10 12:52:59.031 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@25487ca6
[DEBUG] 2022-05-10 12:52:59.031 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@25487ca6
[DEBUG] 2022-05-10 12:52:59.032 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@42db9726
[DEBUG] 2022-05-10 12:52:59.033 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@31ad310
[DEBUG] 2022-05-10 12:52:59.033 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31ad310
[DEBUG] 2022-05-10 12:52:59.035 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@119760fb
[DEBUG] 2022-05-10 12:52:59.035 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@119760fb
[DEBUG] 2022-05-10 12:52:59.035 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@c6b9bec
[DEBUG] 2022-05-10 12:52:59.035 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5294d6c4
[DEBUG] 2022-05-10 12:52:59.037 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@71a34cf3
[DEBUG] 2022-05-10 12:52:59.039 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@70fb429a
[DEBUG] 2022-05-10 12:52:59.040 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@70fb429a
[DEBUG] 2022-05-10 12:52:59.041 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7487c2c1
[DEBUG] 2022-05-10 12:52:59.041 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@27f802be
[DEBUG] 2022-05-10 12:52:59.041 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@138c3e04
[DEBUG] 2022-05-10 12:52:59.041 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@582562c8
[DEBUG] 2022-05-10 12:52:59.041 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@12fe32c7
[DEBUG] 2022-05-10 12:52:59.041 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@75742fd4
[DEBUG] 2022-05-10 12:52:59.041 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@77a4360
[DEBUG] 2022-05-10 12:52:59.041 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@743a5265
[DEBUG] 2022-05-10 12:52:59.070 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-05-10 12:52:59.073 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-05-10 12:52:59.073 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-05-10 12:52:59.073 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-05-10 12:52:59.074 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-05-10 12:52:59.075 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-05-10 12:52:59.075 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-05-10 12:52:59.076 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-05-10 12:52:59.077 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-05-10 12:52:59.077 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-05-10 12:52:59.077 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-05-10 12:52:59.077 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-05-10 12:52:59.078 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-05-10 12:52:59.078 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2022-05-10 12:52:59.083 [http-nio-8080-exec-4] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://aa9k253xu276jc.cg2el8onktgs.us-east-2.rds.amazonaws.com:3306/wdev
[INFO ] 2022-05-10 12:52:59.084 [http-nio-8080-exec-4] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2022-05-10 12:52:59.084 [http-nio-8080-exec-4] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2022-05-10 12:52:59.267 [http-nio-8080-exec-4] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2022-05-10 12:53:00.647 [http-nio-8080-exec-4] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
[DEBUG] 2022-05-10 12:53:00.650 [http-nio-8080-exec-4] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.28 (Revision: 7ff2161da3899f379fb3171b6538b191b1c5c7e2)
      major : 8
      minor : 0
[DEBUG] 2022-05-10 12:53:00.650 [http-nio-8080-exec-4] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-05-10 12:53:00.689 [http-nio-8080-exec-4] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2022-05-10 12:53:00.720 [http-nio-8080-exec-4] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2022-05-10 12:53:00.815 [http-nio-8080-exec-4] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2022-05-10 12:53:00.961 [http-nio-8080-exec-4] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-05-10 12:53:00.970 [http-nio-8080-exec-4] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72ca8222] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@780acddd]
[DEBUG] 2022-05-10 12:53:01.053 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.palmerlarson.entity.User
[DEBUG] 2022-05-10 12:53:01.071 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-05-10 12:53:01.076 [http-nio-8080-exec-4] EntityBinder - Import with entity name User
[DEBUG] 2022-05-10 12:53:01.079 [http-nio-8080-exec-4] EntityBinder - Bind entity com.palmerlarson.entity.User on table user
[DEBUG] 2022-05-10 12:53:01.102 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-05-10 12:53:01.106 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2022-05-10 12:53:01.108 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.palmerlarson.entity.User:id]
[DEBUG] 2022-05-10 12:53:01.110 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2022-05-10 12:53:01.112 [http-nio-8080-exec-4] PropertyBinder - Building property id
[DEBUG] 2022-05-10 12:53:01.115 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2022-05-10 12:53:01.116 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-05-10 12:53:01.116 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property first_name with lazy=false
[DEBUG] 2022-05-10 12:53:01.117 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.palmerlarson.entity.User:first_name]
[DEBUG] 2022-05-10 12:53:01.117 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for first_name
[DEBUG] 2022-05-10 12:53:01.117 [http-nio-8080-exec-4] PropertyBinder - Building property first_name
[DEBUG] 2022-05-10 12:53:01.117 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=gross_income, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-05-10 12:53:01.117 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property gross_income with lazy=false
[DEBUG] 2022-05-10 12:53:01.117 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.palmerlarson.entity.User:gross_income]
[DEBUG] 2022-05-10 12:53:01.117 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for gross_income
[DEBUG] 2022-05-10 12:53:01.117 [http-nio-8080-exec-4] PropertyBinder - Building property gross_income
[DEBUG] 2022-05-10 12:53:01.117 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-05-10 12:53:01.117 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property last_name with lazy=false
[DEBUG] 2022-05-10 12:53:01.117 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.palmerlarson.entity.User:last_name]
[DEBUG] 2022-05-10 12:53:01.118 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for last_name
[DEBUG] 2022-05-10 12:53:01.118 [http-nio-8080-exec-4] PropertyBinder - Building property last_name
[DEBUG] 2022-05-10 12:53:01.119 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id', referencedColumn='user_id', mappedBy=''}
[DEBUG] 2022-05-10 12:53:01.121 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=tool, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-05-10 12:53:01.125 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=userName, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-05-10 12:53:01.126 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2022-05-10 12:53:01.129 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.palmerlarson.entity.User:userName]
[DEBUG] 2022-05-10 12:53:01.130 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2022-05-10 12:53:01.130 [http-nio-8080-exec-4] PropertyBinder - Building property userName
[DEBUG] 2022-05-10 12:53:01.133 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.palmerlarson.entity.Tool
[DEBUG] 2022-05-10 12:53:01.133 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-05-10 12:53:01.134 [http-nio-8080-exec-4] EntityBinder - Import with entity name Tool
[DEBUG] 2022-05-10 12:53:01.135 [http-nio-8080-exec-4] EntityBinder - Bind entity com.palmerlarson.entity.Tool on table tool
[DEBUG] 2022-05-10 12:53:01.139 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tool), mappingColumn=tool_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-05-10 12:53:01.139 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property tool_id with lazy=false
[DEBUG] 2022-05-10 12:53:01.139 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.palmerlarson.entity.Tool:tool_id]
[DEBUG] 2022-05-10 12:53:01.139 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for tool_id
[DEBUG] 2022-05-10 12:53:01.140 [http-nio-8080-exec-4] PropertyBinder - Building property tool_id
[DEBUG] 2022-05-10 12:53:01.140 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(tool_id)]), tool_id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2022-05-10 12:53:01.140 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tool), mappingColumn=negative_asset, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-05-10 12:53:01.140 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property negative_asset with lazy=false
[DEBUG] 2022-05-10 12:53:01.140 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.palmerlarson.entity.Tool:negative_asset]
[DEBUG] 2022-05-10 12:53:01.140 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for negative_asset
[DEBUG] 2022-05-10 12:53:01.141 [http-nio-8080-exec-4] PropertyBinder - Building property negative_asset
[DEBUG] 2022-05-10 12:53:01.141 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tool), mappingColumn=positive_asset, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-05-10 12:53:01.141 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property positive_asset with lazy=false
[DEBUG] 2022-05-10 12:53:01.141 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.palmerlarson.entity.Tool:positive_asset]
[DEBUG] 2022-05-10 12:53:01.141 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for positive_asset
[DEBUG] 2022-05-10 12:53:01.141 [http-nio-8080-exec-4] PropertyBinder - Building property positive_asset
[DEBUG] 2022-05-10 12:53:01.141 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2022-05-10 12:53:01.141 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(tool), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-05-10 12:53:01.142 [http-nio-8080-exec-4] PropertyBinder - Building property user_id
[DEBUG] 2022-05-10 12:53:01.146 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2022-05-10 12:53:01.146 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for first_name
[DEBUG] 2022-05-10 12:53:01.146 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for gross_income
[DEBUG] 2022-05-10 12:53:01.146 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for last_name
[DEBUG] 2022-05-10 12:53:01.147 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2022-05-10 12:53:01.147 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for tool_id
[DEBUG] 2022-05-10 12:53:01.147 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for negative_asset
[DEBUG] 2022-05-10 12:53:01.147 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for positive_asset
[DEBUG] 2022-05-10 12:53:01.150 [http-nio-8080-exec-4] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2022-05-10 12:53:01.152 [http-nio-8080-exec-4] PrimaryKey - Forcing column [tool_id] to be non-null as it is part of the primary key for table [tool]
[DEBUG] 2022-05-10 12:53:01.153 [http-nio-8080-exec-4] PropertyBinder - Building property tool
[DEBUG] 2022-05-10 12:53:01.153 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.palmerlarson.entity.User
[DEBUG] 2022-05-10 12:53:01.156 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.palmerlarson.entity.User
[DEBUG] 2022-05-10 12:53:01.192 [http-nio-8080-exec-4] SessionFactoryImpl - Building session factory
[DEBUG] 2022-05-10 12:53:01.192 [http-nio-8080-exec-4] Settings - SessionFactory name : null
[DEBUG] 2022-05-10 12:53:01.193 [http-nio-8080-exec-4] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-05-10 12:53:01.193 [http-nio-8080-exec-4] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-05-10 12:53:01.193 [http-nio-8080-exec-4] Settings - Statistics: disabled
[DEBUG] 2022-05-10 12:53:01.193 [http-nio-8080-exec-4] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-05-10 12:53:01.193 [http-nio-8080-exec-4] Settings - Default entity-mode: pojo
[DEBUG] 2022-05-10 12:53:01.193 [http-nio-8080-exec-4] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-05-10 12:53:01.193 [http-nio-8080-exec-4] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-05-10 12:53:01.193 [http-nio-8080-exec-4] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-05-10 12:53:01.193 [http-nio-8080-exec-4] Settings - Default batch fetch size: -1
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Default null ordering: NONE
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Query language substitutions: {}
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Named query checking : enabled
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Second-level cache: disabled
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Second-level query cache: disabled
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Second-level query cache factory: null
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Second-level cache region prefix: null
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - JDBC batch size: 15
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Scrollable result sets: enabled
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Wrap result sets: disabled
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - JDBC result set fetch size: null
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - JPA compliance - query : 
[DEBUG] 2022-05-10 12:53:01.194 [http-nio-8080-exec-4] Settings - JPA compliance - closed-handling : 
[DEBUG] 2022-05-10 12:53:01.195 [http-nio-8080-exec-4] Settings - JPA compliance - lists : 
[DEBUG] 2022-05-10 12:53:01.195 [http-nio-8080-exec-4] Settings - JPA compliance - transactions : 
[INFO ] 2022-05-10 12:53:01.247 [http-nio-8080-exec-4] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2022-05-10 12:53:01.266 [http-nio-8080-exec-4] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-05-10 12:53:01.266 [http-nio-8080-exec-4] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=true, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.14.jdk/Contents/Home/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-01-18, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.14.jdk/Contents/Home, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, com.sun.management.jmxremote.password.file=/Users/palmerlarson/Library/Caches/JetBrains/IntelliJIdea2021.3/tomcat/54adfaba-4143-4fd0-89ea-4e1c570d360d/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/Users/palmerlarson/Library/Caches/JetBrains/IntelliJIdea2021.3/tomcat/54adfaba-4143-4fd0-89ea-4e1c570d360d/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=palmer1995, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.14+8-LTS-263, user.name=palmerlarson, file.encoding=UTF-8, java.vendor.version=18.9, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/Users/palmerlarson/Spring 2022/Ent Java/Tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, com.sun.management.jmxremote.port=1099, java.version=11.0.14, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, java.library.path=/Users/palmerlarson/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeBig, tomcat.util.buf.StringCache.byte.enabled=true, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, gopherProxySet=false, java.class.path=/Users/palmerlarson/Spring 2022/Ent Java/Tomcat/bin/bootstrap.jar:/Users/palmerlarson/Spring 2022/Ent Java/Tomcat/bin/tomcat-juli.jar, java.vm.vendor=Oracle Corporation, user.timezone=America/Chicago, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/Users/palmerlarson, hibernate.c3p0.max_statements=50, user.language=en, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., server.loader=, com.sun.management.jmxremote.access.file=/Users/palmerlarson/Library/Caches/JetBrains/IntelliJIdea2021.3/tomcat/54adfaba-4143-4fd0-89ea-4e1c570d360d/jmxremote.access, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, common.loader="/Users/palmerlarson/Spring 2022/Ent Java/Tomcat/lib","/Users/palmerlarson/Spring 2022/Ent Java/Tomcat/lib/*.jar","/Users/palmerlarson/Spring 2022/Ent Java/Tomcat/lib","/Users/palmerlarson/Spring 2022/Ent Java/Tomcat/lib/*.jar", hibernate.connection.username=****, os.version=12.3.1, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://aa9k253xu276jc.cg2el8onktgs.us-east-2.rds.amazonaws.com:3306/wdev, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, catalina.home=/Users/palmerlarson/Spring 2022/Ent Java/Tomcat, user.dir=/Users/palmerlarson/Spring 2022/Ent Java/Tomcat/bin, os.arch=x86_64, hibernate.connection.password=****, catalina.base=/Users/palmerlarson/Library/Caches/JetBrains/IntelliJIdea2021.3/tomcat/54adfaba-4143-4fd0-89ea-4e1c570d360d, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1364d844, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.vm.info=mixed mode, java.vm.version=11.0.14+8-LTS-263, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, connection.url=jdbc:mysql://aa9k253xu276jc.cg2el8onktgs.us-east-2.rds.amazonaws.com:3306/wdev, java.class.version=55.0}
[DEBUG] 2022-05-10 12:53:01.285 [http-nio-8080-exec-4] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2022-05-10 12:53:01.285 [http-nio-8080-exec-4] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-05-10 12:53:01.288 [http-nio-8080-exec-4] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-05-10 12:53:01.288 [http-nio-8080-exec-4] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72ca8222] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@241c915b]
[DEBUG] 2022-05-10 12:53:01.379 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.palmerlarson.entity.Tool] is safe
[DEBUG] 2022-05-10 12:53:01.383 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.palmerlarson.entity.Tool
[DEBUG] 2022-05-10 12:53:01.413 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.palmerlarson.entity.Tool] is safe
[DEBUG] 2022-05-10 12:53:01.413 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.palmerlarson.entity.Tool
[DEBUG] 2022-05-10 12:53:01.636 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.palmerlarson.entity.User] is safe
[DEBUG] 2022-05-10 12:53:01.636 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.palmerlarson.entity.User
[DEBUG] 2022-05-10 12:53:01.637 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.palmerlarson.entity.User] is safe
[DEBUG] 2022-05-10 12:53:01.637 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.palmerlarson.entity.User
[DEBUG] 2022-05-10 12:53:01.685 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.palmerlarson.entity.Tool
[DEBUG] 2022-05-10 12:53:01.685 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select tool_id from tool where tool_id =?
[DEBUG] 2022-05-10 12:53:01.685 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select tool_.tool_id, tool_.negative_asset as negative2_0_, tool_.positive_asset as positive3_0_, tool_.user_id as user_id4_0_ from tool tool_ where tool_.tool_id=?
[DEBUG] 2022-05-10 12:53:01.685 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into tool (negative_asset, positive_asset, user_id, tool_id) values (?, ?, ?, ?)
[DEBUG] 2022-05-10 12:53:01.685 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update tool set negative_asset=?, positive_asset=?, user_id=? where tool_id=?
[DEBUG] 2022-05-10 12:53:01.685 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from tool where tool_id=?
[DEBUG] 2022-05-10 12:53:01.685 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into tool (negative_asset, positive_asset, user_id) values (?, ?, ?)
[DEBUG] 2022-05-10 12:53:01.714 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@171dff9b]
[DEBUG] 2022-05-10 12:53:01.716 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : negative_asset
[DEBUG] 2022-05-10 12:53:01.716 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : positive_asset
[DEBUG] 2022-05-10 12:53:01.716 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id
[DEBUG] 2022-05-10 12:53:01.719 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50679f38]
[DEBUG] 2022-05-10 12:53:01.724 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id.first_name
[DEBUG] 2022-05-10 12:53:01.725 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id.gross_income
[DEBUG] 2022-05-10 12:53:01.725 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id.last_name
[DEBUG] 2022-05-10 12:53:01.725 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id.userName
[DEBUG] 2022-05-10 12:53:01.725 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id.tool
[DEBUG] 2022-05-10 12:53:01.725 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e818aa5]
[DEBUG] 2022-05-10 12:53:01.725 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id.tool.negative_asset
[DEBUG] 2022-05-10 12:53:01.725 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id.tool.positive_asset
[DEBUG] 2022-05-10 12:53:01.725 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id.tool.user_id
[DEBUG] 2022-05-10 12:53:01.725 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user_id.tool.user_id
[DEBUG] 2022-05-10 12:53:01.726 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-05-10 12:53:01.740 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-05-10 12:53:01.747 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.palmerlarson.entity.Tool)
    - Returns
       - EntityReturnImpl(entity=com.palmerlarson.entity.Tool, querySpaceUid=<gen:0>, path=com.palmerlarson.entity.Tool)
          - EntityAttributeFetchImpl(entity=com.palmerlarson.entity.User, querySpaceUid=<gen:1>, path=com.palmerlarson.entity.Tool.user_id)
             - EntityAttributeFetchImpl(entity=com.palmerlarson.entity.Tool, querySpaceUid=<gen:2>, path=com.palmerlarson.entity.Tool.user_id.tool)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.palmerlarson.entity.Tool)
          - SQL table alias mapping - tool0_
          - alias suffix - 0_
          - suffixed key columns - {tool_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user_id)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.palmerlarson.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(tool)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.palmerlarson.entity.Tool)
                      - SQL table alias mapping - tool2_
                      - alias suffix - 2_
                      - suffixed key columns - {tool_id1_0_2_}

[DEBUG] 2022-05-10 12:53:01.749 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.palmerlarson.entity.Tool [NONE]: select tool0_.tool_id as tool_id1_0_0_, tool0_.negative_asset as negative2_0_0_, tool0_.positive_asset as positive3_0_0_, tool0_.user_id as user_id4_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.gross_income as gross_in3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.userName as userName5_1_1_, tool2_.tool_id as tool_id1_0_2_, tool2_.negative_asset as negative2_0_2_, tool2_.positive_asset as positive3_0_2_, tool2_.user_id as user_id4_0_2_ from tool tool0_ left outer join user user1_ on tool0_.user_id=user1_.id left outer join tool tool2_ on user1_.id=tool2_.tool_id where tool0_.tool_id=?
[DEBUG] 2022-05-10 12:53:01.751 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21f530a0]
[DEBUG] 2022-05-10 12:53:01.752 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : negative_asset
[DEBUG] 2022-05-10 12:53:01.752 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : positive_asset
[DEBUG] 2022-05-10 12:53:01.752 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id
[DEBUG] 2022-05-10 12:53:01.752 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b2c16c4]
[DEBUG] 2022-05-10 12:53:01.752 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id.first_name
[DEBUG] 2022-05-10 12:53:01.752 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id.gross_income
[DEBUG] 2022-05-10 12:53:01.752 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id.last_name
[DEBUG] 2022-05-10 12:53:01.752 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id.userName
[DEBUG] 2022-05-10 12:53:01.752 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id.tool
[DEBUG] 2022-05-10 12:53:01.752 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@369ce18c]
[DEBUG] 2022-05-10 12:53:01.752 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id.tool.negative_asset
[DEBUG] 2022-05-10 12:53:01.752 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id.tool.positive_asset
[DEBUG] 2022-05-10 12:53:01.752 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user_id.tool.user_id
[DEBUG] 2022-05-10 12:53:01.752 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user_id.tool.user_id
[DEBUG] 2022-05-10 12:53:01.753 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-05-10 12:53:01.753 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-05-10 12:53:01.753 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.palmerlarson.entity.Tool)
    - Returns
       - EntityReturnImpl(entity=com.palmerlarson.entity.Tool, querySpaceUid=<gen:0>, path=com.palmerlarson.entity.Tool)
          - EntityAttributeFetchImpl(entity=com.palmerlarson.entity.User, querySpaceUid=<gen:1>, path=com.palmerlarson.entity.Tool.user_id)
             - EntityAttributeFetchImpl(entity=com.palmerlarson.entity.Tool, querySpaceUid=<gen:2>, path=com.palmerlarson.entity.Tool.user_id.tool)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.palmerlarson.entity.Tool)
          - SQL table alias mapping - tool0_
          - alias suffix - 0_
          - suffixed key columns - {tool_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user_id)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.palmerlarson.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(tool)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.palmerlarson.entity.Tool)
                      - SQL table alias mapping - tool2_
                      - alias suffix - 2_
                      - suffixed key columns - {tool_id1_0_2_}

[DEBUG] 2022-05-10 12:53:01.753 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.palmerlarson.entity.Tool [READ]: select tool0_.tool_id as tool_id1_0_0_, tool0_.negative_asset as negative2_0_0_, tool0_.positive_asset as positive3_0_0_, tool0_.user_id as user_id4_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.gross_income as gross_in3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.userName as userName5_1_1_, tool2_.tool_id as tool_id1_0_2_, tool2_.negative_asset as negative2_0_2_, tool2_.positive_asset as positive3_0_2_, tool2_.user_id as user_id4_0_2_ from tool tool0_ left outer join user user1_ on tool0_.user_id=user1_.id left outer join tool tool2_ on user1_.id=tool2_.tool_id where tool0_.tool_id=?
[DEBUG] 2022-05-10 12:53:01.767 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.palmerlarson.entity.Tool: select tool0_.tool_id as tool_id1_0_0_, tool0_.negative_asset as negative2_0_0_, tool0_.positive_asset as positive3_0_0_, tool0_.user_id as user_id4_0_0_ from tool tool0_ where tool0_.tool_id=?
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.palmerlarson.entity.Tool: select tool0_.tool_id as tool_id1_0_0_, tool0_.negative_asset as negative2_0_0_, tool0_.positive_asset as positive3_0_0_, tool0_.user_id as user_id4_0_0_ from tool tool0_ where tool0_.tool_id=?
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.palmerlarson.entity.User
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select user_.id, user_.first_name as first_na2_1_, user_.gross_income as gross_in3_1_, user_.last_name as last_nam4_1_, user_.userName as userName5_1_ from user user_ where user_.id=?
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into user (first_name, gross_income, last_name, userName, id) values (?, ?, ?, ?, ?)
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update user set first_name=?, gross_income=?, last_name=?, userName=? where id=?
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into user (first_name, gross_income, last_name, userName) values (?, ?, ?, ?)
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@368b125c]
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : gross_income
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : tool
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : tool
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-05-10 12:53:01.768 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.palmerlarson.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.palmerlarson.entity.User, querySpaceUid=<gen:0>, path=com.palmerlarson.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.palmerlarson.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2022-05-10 12:53:01.769 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.palmerlarson.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gross_income as gross_in3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.userName as userName5_1_0_ from user user0_ where user0_.id=?
[DEBUG] 2022-05-10 12:53:01.769 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@621503a0]
[DEBUG] 2022-05-10 12:53:01.769 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : first_name
[DEBUG] 2022-05-10 12:53:01.769 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : gross_income
[DEBUG] 2022-05-10 12:53:01.769 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : last_name
[DEBUG] 2022-05-10 12:53:01.769 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2022-05-10 12:53:01.769 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : tool
[DEBUG] 2022-05-10 12:53:01.769 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : tool
[DEBUG] 2022-05-10 12:53:01.769 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-05-10 12:53:01.769 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-05-10 12:53:01.769 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.palmerlarson.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.palmerlarson.entity.User, querySpaceUid=<gen:0>, path=com.palmerlarson.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.palmerlarson.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2022-05-10 12:53:01.769 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.palmerlarson.entity.User [READ]: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gross_income as gross_in3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.userName as userName5_1_0_ from user user0_ where user0_.id=?
[DEBUG] 2022-05-10 12:53:01.770 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.palmerlarson.entity.User: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gross_income as gross_in3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.userName as userName5_1_0_ from user user0_ where user0_.id=?
[DEBUG] 2022-05-10 12:53:01.770 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.palmerlarson.entity.User: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gross_income as gross_in3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.userName as userName5_1_0_ from user user0_ where user0_.id=?
[DEBUG] 2022-05-10 12:53:01.803 [http-nio-8080-exec-4] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2022-05-10 12:53:01.804 [http-nio-8080-exec-4] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-05-10 12:53:01.805 [http-nio-8080-exec-4] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-05-10 12:53:01.815 [http-nio-8080-exec-4] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-05-10 12:53:01.816 [http-nio-8080-exec-4] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-05-10 12:53:01.817 [http-nio-8080-exec-4] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-05-10 12:53:01.817 [http-nio-8080-exec-4] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-05-10 12:53:01.821 [http-nio-8080-exec-4] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6cb46a9a
[DEBUG] 2022-05-10 12:53:01.823 [http-nio-8080-exec-4] SessionFactoryRegistry - Registering SessionFactory: 5d1ce49d-1d69-47ca-a521-7bd632413507 (<unnamed>)
[DEBUG] 2022-05-10 12:53:01.824 [http-nio-8080-exec-4] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2022-05-10 12:53:01.897 [http-nio-8080-exec-4] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-05-10 12:53:01.916 [http-nio-8080-exec-4] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gross_income as gross_in3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.userName as userName5_1_0_ from user user0_ where user0_.id=?
[DEBUG] 2022-05-10 12:53:02.040 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-05-10 12:53:02.042 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2022-05-10 12:53:02.057 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.palmerlarson.entity.User#1]
[DEBUG] 2022-05-10 12:53:02.058 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `first_name` : value = Kathy
[DEBUG] 2022-05-10 12:53:02.058 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:02.058 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `gross_income` : value = 100000
[DEBUG] 2022-05-10 12:53:02.058 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`gross_income`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:02.058 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `last_name` : value = Sierra
[DEBUG] 2022-05-10 12:53:02.058 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:02.058 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = kathy
[DEBUG] 2022-05-10 12:53:02.058 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:02.058 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `tool` : value = 1
[DEBUG] 2022-05-10 12:53:02.058 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`tool`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:02.059 [http-nio-8080-exec-4] SQL - select tool0_.tool_id as tool_id1_0_0_, tool0_.negative_asset as negative2_0_0_, tool0_.positive_asset as positive3_0_0_, tool0_.user_id as user_id4_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.gross_income as gross_in3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.userName as userName5_1_1_, tool2_.tool_id as tool_id1_0_2_, tool2_.negative_asset as negative2_0_2_, tool2_.positive_asset as positive3_0_2_, tool2_.user_id as user_id4_0_2_ from tool tool0_ left outer join user user1_ on tool0_.user_id=user1_.id left outer join tool tool2_ on user1_.id=tool2_.tool_id where tool0_.tool_id=?
[DEBUG] 2022-05-10 12:53:02.110 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-05-10 12:53:02.110 [http-nio-8080-exec-4] AbstractLoadPlanBasedEntityLoader - Done entity load : com.palmerlarson.entity.Tool#1
[DEBUG] 2022-05-10 12:53:02.111 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.palmerlarson.entity.User#1]
[DEBUG] 2022-05-10 12:53:02.112 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-05-10 12:53:02.112 [http-nio-8080-exec-4] AbstractLoadPlanBasedEntityLoader - Done entity load : com.palmerlarson.entity.User#1
[DEBUG] 2022-05-10 12:53:02.112 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-05-10 12:53:02.707 [http-nio-8080-exec-5] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gross_income as gross_in3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.userName as userName5_1_0_ from user user0_ where user0_.id=?
[DEBUG] 2022-05-10 12:53:02.805 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-05-10 12:53:02.807 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2022-05-10 12:53:02.812 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.palmerlarson.entity.User#1]
[DEBUG] 2022-05-10 12:53:02.812 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `first_name` : value = Kathy
[DEBUG] 2022-05-10 12:53:02.812 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:02.812 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `gross_income` : value = 100000
[DEBUG] 2022-05-10 12:53:02.812 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`gross_income`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:02.812 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `last_name` : value = Sierra
[DEBUG] 2022-05-10 12:53:02.812 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:02.812 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `userName` : value = kathy
[DEBUG] 2022-05-10 12:53:02.812 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:02.813 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `tool` : value = 1
[DEBUG] 2022-05-10 12:53:02.813 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`tool`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:02.813 [http-nio-8080-exec-5] SQL - select tool0_.tool_id as tool_id1_0_0_, tool0_.negative_asset as negative2_0_0_, tool0_.positive_asset as positive3_0_0_, tool0_.user_id as user_id4_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.gross_income as gross_in3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.userName as userName5_1_1_, tool2_.tool_id as tool_id1_0_2_, tool2_.negative_asset as negative2_0_2_, tool2_.positive_asset as positive3_0_2_, tool2_.user_id as user_id4_0_2_ from tool tool0_ left outer join user user1_ on tool0_.user_id=user1_.id left outer join tool tool2_ on user1_.id=tool2_.tool_id where tool0_.tool_id=?
[DEBUG] 2022-05-10 12:53:02.863 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-05-10 12:53:02.863 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.palmerlarson.entity.Tool#1
[DEBUG] 2022-05-10 12:53:02.863 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.palmerlarson.entity.User#1]
[DEBUG] 2022-05-10 12:53:02.863 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-05-10 12:53:02.863 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.palmerlarson.entity.User#1
[DEBUG] 2022-05-10 12:53:02.863 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-05-10 12:53:07.807 [http-nio-8080-exec-6] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gross_income as gross_in3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.userName as userName5_1_0_ from user user0_ where user0_.id=?
[DEBUG] 2022-05-10 12:53:07.908 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-05-10 12:53:07.909 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2022-05-10 12:53:07.913 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.palmerlarson.entity.User#1]
[DEBUG] 2022-05-10 12:53:07.913 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `first_name` : value = Kathy
[DEBUG] 2022-05-10 12:53:07.913 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:07.913 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `gross_income` : value = 100000
[DEBUG] 2022-05-10 12:53:07.913 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`gross_income`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:07.913 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `last_name` : value = Sierra
[DEBUG] 2022-05-10 12:53:07.913 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:07.913 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `userName` : value = kathy
[DEBUG] 2022-05-10 12:53:07.913 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:07.913 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `tool` : value = 1
[DEBUG] 2022-05-10 12:53:07.913 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`tool`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:07.914 [http-nio-8080-exec-6] SQL - select tool0_.tool_id as tool_id1_0_0_, tool0_.negative_asset as negative2_0_0_, tool0_.positive_asset as positive3_0_0_, tool0_.user_id as user_id4_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.gross_income as gross_in3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.userName as userName5_1_1_, tool2_.tool_id as tool_id1_0_2_, tool2_.negative_asset as negative2_0_2_, tool2_.positive_asset as positive3_0_2_, tool2_.user_id as user_id4_0_2_ from tool tool0_ left outer join user user1_ on tool0_.user_id=user1_.id left outer join tool tool2_ on user1_.id=tool2_.tool_id where tool0_.tool_id=?
[DEBUG] 2022-05-10 12:53:07.966 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-05-10 12:53:07.966 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : com.palmerlarson.entity.Tool#1
[DEBUG] 2022-05-10 12:53:07.966 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.palmerlarson.entity.User#1]
[DEBUG] 2022-05-10 12:53:07.966 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-05-10 12:53:07.966 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : com.palmerlarson.entity.User#1
[DEBUG] 2022-05-10 12:53:07.966 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-05-10 12:53:16.455 [http-nio-8080-exec-7] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gross_income as gross_in3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.userName as userName5_1_0_ from user user0_ where user0_.id=?
[DEBUG] 2022-05-10 12:53:16.550 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-05-10 12:53:16.551 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2022-05-10 12:53:16.556 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.palmerlarson.entity.User#1]
[DEBUG] 2022-05-10 12:53:16.556 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `first_name` : value = Kathy
[DEBUG] 2022-05-10 12:53:16.556 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:16.556 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `gross_income` : value = 100000
[DEBUG] 2022-05-10 12:53:16.557 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`gross_income`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:16.557 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `last_name` : value = Sierra
[DEBUG] 2022-05-10 12:53:16.557 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:16.557 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `userName` : value = kathy
[DEBUG] 2022-05-10 12:53:16.557 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:16.557 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `tool` : value = 1
[DEBUG] 2022-05-10 12:53:16.557 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`tool`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:16.558 [http-nio-8080-exec-7] SQL - select tool0_.tool_id as tool_id1_0_0_, tool0_.negative_asset as negative2_0_0_, tool0_.positive_asset as positive3_0_0_, tool0_.user_id as user_id4_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.gross_income as gross_in3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.userName as userName5_1_1_, tool2_.tool_id as tool_id1_0_2_, tool2_.negative_asset as negative2_0_2_, tool2_.positive_asset as positive3_0_2_, tool2_.user_id as user_id4_0_2_ from tool tool0_ left outer join user user1_ on tool0_.user_id=user1_.id left outer join tool tool2_ on user1_.id=tool2_.tool_id where tool0_.tool_id=?
[DEBUG] 2022-05-10 12:53:16.612 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-05-10 12:53:16.617 [http-nio-8080-exec-7] AbstractLoadPlanBasedEntityLoader - Done entity load : com.palmerlarson.entity.Tool#1
[DEBUG] 2022-05-10 12:53:16.620 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.palmerlarson.entity.User#1]
[DEBUG] 2022-05-10 12:53:16.621 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-05-10 12:53:16.624 [http-nio-8080-exec-7] AbstractLoadPlanBasedEntityLoader - Done entity load : com.palmerlarson.entity.User#1
[DEBUG] 2022-05-10 12:53:16.625 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-05-10 12:53:16.920 [http-nio-8080-exec-8] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gross_income as gross_in3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.userName as userName5_1_0_ from user user0_ where user0_.id=?
[DEBUG] 2022-05-10 12:53:17.020 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-05-10 12:53:17.021 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2022-05-10 12:53:17.024 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.palmerlarson.entity.User#1]
[DEBUG] 2022-05-10 12:53:17.025 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `first_name` : value = Kathy
[DEBUG] 2022-05-10 12:53:17.025 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:17.025 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `gross_income` : value = 100000
[DEBUG] 2022-05-10 12:53:17.025 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`gross_income`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:17.025 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `last_name` : value = Sierra
[DEBUG] 2022-05-10 12:53:17.025 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:17.026 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `userName` : value = kathy
[DEBUG] 2022-05-10 12:53:17.026 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:17.026 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `tool` : value = 1
[DEBUG] 2022-05-10 12:53:17.026 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`tool`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:17.027 [http-nio-8080-exec-8] SQL - select tool0_.tool_id as tool_id1_0_0_, tool0_.negative_asset as negative2_0_0_, tool0_.positive_asset as positive3_0_0_, tool0_.user_id as user_id4_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.gross_income as gross_in3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.userName as userName5_1_1_, tool2_.tool_id as tool_id1_0_2_, tool2_.negative_asset as negative2_0_2_, tool2_.positive_asset as positive3_0_2_, tool2_.user_id as user_id4_0_2_ from tool tool0_ left outer join user user1_ on tool0_.user_id=user1_.id left outer join tool tool2_ on user1_.id=tool2_.tool_id where tool0_.tool_id=?
[DEBUG] 2022-05-10 12:53:17.082 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-05-10 12:53:17.083 [http-nio-8080-exec-8] AbstractLoadPlanBasedEntityLoader - Done entity load : com.palmerlarson.entity.Tool#1
[DEBUG] 2022-05-10 12:53:17.083 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.palmerlarson.entity.User#1]
[DEBUG] 2022-05-10 12:53:17.083 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-05-10 12:53:17.084 [http-nio-8080-exec-8] AbstractLoadPlanBasedEntityLoader - Done entity load : com.palmerlarson.entity.User#1
[DEBUG] 2022-05-10 12:53:17.084 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-05-10 12:53:25.641 [http-nio-8080-exec-9] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gross_income as gross_in3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.userName as userName5_1_0_ from user user0_ where user0_.id=?
[DEBUG] 2022-05-10 12:53:25.754 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-05-10 12:53:25.755 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2022-05-10 12:53:25.756 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.palmerlarson.entity.User#1]
[DEBUG] 2022-05-10 12:53:25.757 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `first_name` : value = Kathy
[DEBUG] 2022-05-10 12:53:25.757 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`first_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:25.757 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `gross_income` : value = 100000
[DEBUG] 2022-05-10 12:53:25.758 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`gross_income`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:25.758 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `last_name` : value = Sierra
[DEBUG] 2022-05-10 12:53:25.758 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`last_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:25.758 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `userName` : value = kathy
[DEBUG] 2022-05-10 12:53:25.759 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:25.765 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `tool` : value = 1
[DEBUG] 2022-05-10 12:53:25.765 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`tool`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-05-10 12:53:25.766 [http-nio-8080-exec-9] SQL - select tool0_.tool_id as tool_id1_0_0_, tool0_.negative_asset as negative2_0_0_, tool0_.positive_asset as positive3_0_0_, tool0_.user_id as user_id4_0_0_, user1_.id as id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.gross_income as gross_in3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.userName as userName5_1_1_, tool2_.tool_id as tool_id1_0_2_, tool2_.negative_asset as negative2_0_2_, tool2_.positive_asset as positive3_0_2_, tool2_.user_id as user_id4_0_2_ from tool tool0_ left outer join user user1_ on tool0_.user_id=user1_.id left outer join tool tool2_ on user1_.id=tool2_.tool_id where tool0_.tool_id=?
[DEBUG] 2022-05-10 12:53:25.823 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-05-10 12:53:25.824 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : com.palmerlarson.entity.Tool#1
[DEBUG] 2022-05-10 12:53:25.824 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.palmerlarson.entity.User#1]
[DEBUG] 2022-05-10 12:53:25.825 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-05-10 12:53:25.825 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : com.palmerlarson.entity.User#1
[DEBUG] 2022-05-10 12:53:25.825 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
